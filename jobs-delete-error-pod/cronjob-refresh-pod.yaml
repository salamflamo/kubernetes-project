apiVersion: v1
kind: Namespace
metadata:
  labels:
    kubernetes.io/metadata.name: sample
  name: sample
spec: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pod-delete
  namespace: sample
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-delete
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pod-delete
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pod-delete
subjects:
- kind: ServiceAccount
  name: pod-delete
  namespace: sample
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: refresh-pod
  namespace: sample
spec:
  concurrencyPolicy: Allow
  failedJobsHistoryLimit: 1
  jobTemplate:
    metadata:
      creationTimestamp: null
      name: refresh-pod
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          containers:
          - command:
            - /bin/bash
            - /script/refresh-pod.sh
            image: salamflamo/delete-pod:latest
            imagePullPolicy: Always
            name: refresh-pod
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: OnFailure
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: pod-delete
          serviceAccountName: pod-delete
          terminationGracePeriodSeconds: 30
  schedule: '*/10 * * * *'
  successfulJobsHistoryLimit: 3
  suspend: false